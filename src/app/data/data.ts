export const questions = [
  {
    id: 1,
    question:
      "Расскажите о видах динамического тестирования, дайте определение динамическому тестированию и расскажите об отличиях видов динамического тестирования.",
    correctAnswer: `Определение: Проверка работы приложения через его запуск и выполнение тестов.\n\nВиды:\n\n- Функциональное тестирование: Проверка, что приложение работает правильно.\n- Нефункциональное тестирование: Проверка производительности, безопасности и других характеристик.\n- Тестирование регрессии: Убедиться, что изменения в коде не сломали существующий функционал.\n\nОтличия: Динамическое тестирование оценивает выполнение кода, тогда как статическое не запускает приложение.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 2,
    question:
      "Расскажите о видах статического тестирования, дайте определение статическому тестированию и расскажите об отличиях видов статического тестирования.",
    correctAnswer: `Определение: Проверка без выполнения программы (анализ кода, документации).\n\nВиды:\n\n- Ревью: Проверка кода или требований вручную.\n- Статический анализ: Автоматическая проверка кода инструментами.\n- Анализ требований: Проверка корректности документации.\n\nОтличия: Выполняется без запуска программы, выявляет ошибки на этапе разработки.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 3,
    question:
      "Расскажите, что такое позитивное тестирование? К какому уровню тестирования приложения относится позитивное тестирование? Приведите как минимум 3 примера позитивного тестирования.",
    correctAnswer: `Определение: Проверка приложения при вводе правильных данных.\n\nУровень: Относится ко всем уровням тестирования.\n\nПримеры:\n\n1. Ввод корректного логина и пароля — успешный вход.\n2. Отправка формы с валидными данными — форма отправлена.\n3. Нажатие кнопки — ожидаемое действие выполняется.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 4,
    question:
      "Расскажите, что такое негативное тестирование? К какому уровню тестирования приложения относится негативное тестирование? Приведите как минимум 3 примера негативного тестирования.",
    correctAnswer: `Определение: Проверка работы приложения с некорректными данными.\n\nУровень: Применимо на всех уровнях тестирования.\n\nПримеры:\n\n1. Ввод текста вместо цифр в поле для числа — ошибка.\n2. Попытка входа с неверным паролем — доступ отклонён.\n3. Ввод SQL-кода в текстовое поле — программа не ломается.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 5,
    question:
      "Расскажите, что такое нефункциональное тестирование? Приведите примеры нефункционального тестирования. И расскажите о видах нефункционального тестирования. (Перечислить все подвиды нефункционального тестирования)",
    correctAnswer: `Определение: Проверка характеристик, не связанных с функциональностью (скорость, стабильность).\n\nПримеры:\n\n- Нагрузочное тестирование.\n- Тестирование безопасности.\n- Тестирование производительности.\n\nВиды:\n\n- Производительность\n- Надёжность\n- Масштабируемость\n- Совместимость\n- Безопасность\n- Удобство использования (юзабилити)`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 6,
    question:
      "Расскажите, что такое функциональное тестирование? Приведите примеры функционального тестирования. И расскажите о видах функционального тестирования. (Перечислить все подвиды функционального тестирования)",
    correctAnswer: `Определение: Проверка, что приложение выполняет свои функции.\n\nПримеры:\n\n1. Регистрация пользователя.\n2. Авторизация.\n3. Сортировка данных в таблице.\n\nВиды:\n\n- Смоук-тестирование\n- Тестирование базы данных\n- Интеграционное тестирование\n- Тестирование интерфейса`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 7,
    question:
      "Что такое юзабилити-тестирование? К какому уровню тестирования приложения относится юзабилити тестирование? Приведите пример юзабилити-тестирования.",
    correctAnswer: `Определение: Проверка удобства использования приложения.\n\nУровень: Относится к нефункциональному тестированию.\n\nПример: Оценка удобства навигации в интернет-магазине.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 8,
    question:
      "Что такое тестирование безопасности? К какому уровню тестирования приложения относится тестирование безопасности? Приведите пример тестирования безопасности.",
    correctAnswer: `Определение: Проверка защиты приложения от атак.\n\nУровень: Нефункциональное тестирование.\n\nПример: Проверка защиты пароля от взлома.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 9,
    question:
      "Что такое нагрузочное тестирование и стресс-тестирование? Опишите различия данных видов тестирования? К какому уровню тестирования приложения относится нагрузочное и стресс-тестирование? Приведите пример нагрузочного и стресс-тестирования.",
    correctAnswer: `Определение:\n\n- Нагрузочное тестирование: Проверка, как приложение работает под большой нагрузкой (например, 1000 пользователей).\n- Стресс-тестирование: Проверка поведения приложения при экстремальных условиях (например, перегрузка сервера).\n\nУровень: Нефункциональное тестирование.\n\nПример нагрузочного: Проверка магазина на распродаже.\nПример стресс-тестирования: Проверка системы при внезапной перегрузке.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 10,
    question:
      "Что такое жизненный цикл тестирования? Расскажите про жизненный цикл тестирования. Опишите этапы жизненного цикла тестирования.",
    correctAnswer: `Определение: Этапы тестирования ПО от планирования до завершения.\n\nЭтапы:\n\n1. Анализ требований.\n2. Подготовка тест-кейсов.\n3. Настройка среды.\n4. Выполнение тестов.\n5. Анализ результатов.\n6. Завершение и отчёт.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 11,
    question:
      "Расскажите об уровнях тестирования по детализации приложения. Опишите различия, дайте определения видам тестирования.",
    correctAnswer: `Определение: Уровни тестирования по детализации различаются в зависимости от глубины проверки.\n\nВиды:\n\n1. Модульное тестирование: Проверка отдельных компонентов приложения. Пример: Проверка функции калькулятора.\n2. Интеграционное тестирование: Проверка взаимодействия между компонентами. Пример: Проверка, как корзина интернет-магазина работает с базой данных.\n3. Системное тестирование: Проверка всего приложения целиком. Пример: Тестирование сайта полностью, от главной страницы до оплаты.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 12,
    question:
      "Что такое альфа-тестирование и бета-тестирование? Опишите их различия.",
    correctAnswer: `Определение:\n\n- Альфа-тестирование: Выполняется внутри компании разработчиком или тестировщиком. Пример: Проверка функционала в тестовой среде.\n- Бета-тестирование: Выполняется реальными пользователями перед релизом. Пример: Пользователи пробуют новое приложение и отправляют отзывы.\n\nРазличия: Альфа-тестирование проводится в контролируемой среде, бета-тестирование — в реальных условиях.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 13,
    question:
      "Расскажите что такое тест-кейс, какие атрибуты обязательны для тест-кейса, а какие являются второстепенными? Расскажите и дайте описание понятию тест-дизайн. Назовите основные аксиомы тестирования.",
    correctAnswer: `Определение:\n\n- Тест-кейс: Пошаговый сценарий проверки приложения.\n\nОбязательные атрибуты:\n\n1. Название.\n2. Шаги.\n3. Входные данные.\n4. Ожидаемый результат.\n\nВторостепенные атрибуты:\n\n1. Приоритет.\n2. Автор.\n3. Ссылка на требования.\n\nТест-дизайн: Процесс создания тест-кейсов.\n\nАксиомы тестирования:\n\n1. Ошибки есть всегда.\n2. Тестирование показывает наличие дефектов, но не доказывает их отсутствие.\n3. Раннее тестирование экономит время и деньги.\n4. Невозможно протестировать всё.\n5. Дефекты скапливаются в одних местах.\n6. Повторное тестирование одного и того же снижает его эффективность.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 14,
    question:
      "Какой вид тестирования следует применить в первую очередь после выхода новой версии продукта? Расскажите про данный вид тестирования и про виды тестирования, которые связаны с изменениями в коде.",
    correctAnswer: `Определение:\n\n- Смоук-тестирование: Быстрая проверка ключевых функций.\n\nВиды тестирования, связанные с изменениями:\n\n1. Тестирование регрессии: Убедиться, что старый функционал работает.\n2. Тестирование исправлений: Проверка, что баг исправлен.\n3. Тестирование изменений: Проверка только новых функций.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 15,
    question:
      "Что такое тестирование? Назовите основные цели тестирования. Объясните зачем необходимо составлять тест-кейсы и чек-листы. Назовите основные отличия тест-кейсов и чек-листов.",
    correctAnswer: `Определение:\n\n- Тестирование: Процесс проверки приложения, чтобы найти ошибки.\n\nЦели:\n\n1. Обеспечить качество.\n2. Найти дефекты.\n3. Подтвердить соответствие требованиям.\n\nТест-кейсы: Детальный сценарий проверки.\nЧек-листы: Список пунктов для проверки без подробностей.\n\nОтличия: Тест-кейс детализирован, чек-лист краток.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 16,
    question:
      "Расскажите алгоритм использования классов эквивалентности и техники граничных значений. Расскажите про технику классов эквивалентности и граничных значений, приведите пример использования. Дайте определение понятию тестовое покрытие.",
    correctAnswer: `Определение:\n\n- Классы эквивалентности: Разделение данных на группы с одинаковым поведением.\n\nПример: Для поля возраста классы — \"меньше 18\", \"18–65\", \"больше 65\".\n\n- Граничные значения: Проверка крайних значений классов.\n\nПример: Проверить 17, 18, 19 для возраста.\n\n- Тестовое покрытие: Степень проверки функционала.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 17,
    question:
      "Расскажите какие виды тестирования относятся к уровню по доступу к коду и архитектуре приложения? (3 уровня) Приведите примеры применения.",
    correctAnswer: `Определение:\n\n1. Белый ящик: Проверка структуры кода. Пример: Тест функций в модуле.\n2. Чёрный ящик: Проверка только функционала без доступа к коду. Пример: Тест интерфейса.\n3. Серый ящик: Комбинация. Пример: Проверка взаимодействия UI и базы данных.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 18,
    question:
      "Расскажите про профессию тестировщика, расскажите о том, что входит в обязанности тестировщика, назовите цели тестировщика.",
    correctAnswer: `Определение:\n\n- Тестировщик: Специалист, который занимается проверкой качества программного обеспечения.\n\nОбязанности:\n\n1. Поиск ошибок.\n2. Проверка соответствия требованиям.\n3. Автоматизация тестов.\n\nЦели:\n\n1. Убедиться, что продукт работает правильно.\n2. Обеспечить удовлетворение пользователей.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 19,
    question:
      "Что такое валидация и верификация? Дайте определения данным понятиям, назовите отличия.",
    correctAnswer: `Определение:\n\n- Валидация: Проверка, соответствует ли продукт требованиям пользователя. Пример: \"Программа удобна?\".\n- Верификация: Проверка, соответствует ли продукт спецификациям. Пример: \"Функция работает по требованиям?\".\n\nОтличия: Валидация проверяет, \"правильный ли это продукт\", верификация — \"правильно ли он сделан\".`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 20,
    question:
      "Что такое баг-трекинговая система? Расскажите зачем она нужна? Приведите примеры.",
    correctAnswer: `Определение:\n\n- Баг-трекинговая система: Инструмент для отслеживания ошибок (багов) в приложении.\n\nЗачем нужна:\n\n1. Упрощает фиксацию, описание и исправление багов.\n2. Помогает команде общаться и отслеживать статус ошибок.\n\nПримеры: Jira, Trello, Bugzilla.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 21,
    question:
      "Расскажите про тестирование требований. Зачем необходимо тестировать требования и техническую документацию? Перечислите основные характеристики тестирования требований и опишите их.",
    correctAnswer: `Определение: Проверка требований на полноту, понятность и реализуемость.\n\nОсновные характеристики:\n\n1. Завершённость: Все аспекты описаны.\n2. Атомарность: Требования не делятся на части.\n3. Непротиворечивость: Нет конфликтов между требованиями.\n4. Однозначность: Требования чётко и понятно сформулированы.\n5. Выполнимость: Требования можно реализовать.\n6. Проверяемость: Требования можно протестировать.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 22,
    question:
      "Что такое контроль качества (QA)? Что входит в контроль качества? Расскажите, что такое тестирование, тест-дизайн, тест-анализ и управление тестированием, а также тест-план.",
    correctAnswer: `Определение: QA (Quality Assurance) — процесс обеспечения высокого качества продукта.\n\nСостав QA:\n\n1. Тестирование: Проверка работоспособности приложения.\n2. Тест-дизайн: Разработка тест-кейсов и сценариев.\n3. Тест-анализ: Анализ требований.\n4. Управление тестированием: Планирование, контроль тестов.\n5. Тест-план: Документ, описывающий стратегию и этапы тестирования.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 23,
    question:
      "Что такое доменное тестирование? Чем оно отличается от классов эквивалентности и граничных значений? Приведите примеры применения.",
    correctAnswer: `Определение: Проверка корректности работы приложения в пределах значений определённого домена.\n\nОтличия: Более детализированное исследование данных.\n\nПримеры применения:\n\n1. Проверка расчётов налогов.\n2. Тестирование скидок в зависимости от суммы заказа.\n3. Проверка тарифов на услуги по регионам.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 24,
    question:
      "Какие существуют техники тест-дизайна белого ящика? Опишите основные.",
    correctAnswer: `Определение: Анализ структуры кода для создания тестов.\n\nТехники:\n\n1. Покрытие операторов: Проверка выполнения всех строк кода.\n2. Покрытие условий: Проверка всех возможных условий.\n3. Покрытие путей: Проверка всех возможных сценариев выполнения.\n4. Покрытие циклов: Проверка поведения циклов.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 25,
    question:
      "Что такое качество ПО? Назовите и опишите основные характеристики качества ПО.",
    correctAnswer: `Определение: Соответствие ПО требованиям и ожиданиям пользователей.\n\nХарактеристики:\n\n1. Функциональность: Приложение выполняет заявленные функции.\n2. Надёжность: Стабильная работа без сбоев.\n3. Удобство использования: Приятный и логичный интерфейс.\n4. Производительность: Быстрота выполнения задач.\n5. Масштабируемость: Возможность увеличивать нагрузку.\n6. Безопасность: Защита данных от угроз.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 26,
    question:
      "Что такое альфа- и бета-тестирование? В чём их ключевые различия?",
    correctAnswer: `Определение:\n\n1. Альфа-тестирование: Выполняется внутри компании в контролируемой среде.\n2. Бета-тестирование: Проводится внешними пользователями в реальной среде.\n\nРазличия:\n\n- Альфа-тестирование выявляет грубые ошибки,\n- Бета-тестирование даёт обратную связь о пользовательском опыте.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 27,
    question:
      "Что такое нагрузочное и стресс-тестирование? Каковы их различия?",
    correctAnswer: `Определение:\n\n1. Нагрузочное тестирование: Проверка системы под высокой нагрузкой.\n2. Стресс-тестирование: Проверка предела производительности при экстремальных условиях.\n\nРазличия:\n\n- Нагрузочное оценивает производительность.\n- Стресс-тестирование оценивает устойчивость системы.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 28,
    question:
      "Какие основные этапы включены в тест-анализ и создание интеллект-карт?",
    correctAnswer: `Определение:\n\n- Тест-анализ: Выявление требований для тестирования.\n- Интеллект-карта: Визуализация структуры тестов.\n\nОсновные этапы:\n\n1. Декомпозиция требований.\n2. Определение зависимостей.\n3. Построение структуры карты.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 29,
    question: "Что такое уровни тестирования по важности функций?",
    correctAnswer: `Определение: Классификация функций по их критичности.\n\nУровни:\n\n1. Критические: Ошибка делает систему неработоспособной.\n2. Высокая важность: Ошибка мешает выполнению основной задачи.\n3. Низкая важность: Ошибка незначительно влияет на работу.`,
    otherAnswers: [],
    type: "тестированию",
  },
  {
    id: 30,
    question: "Какие виды тестирования применяются при изменениях в коде?",
    correctAnswer: `Виды:\n\n1. Тестирование регрессии: Проверка, что изменения не сломали старый функционал.\n2. Тестирование исправлений: Проверка конкретных исправленных ошибок.\n3. Смоук-тестирование: Быстрая проверка ключевых функций.`,
    otherAnswers: [],
    type: "тестированию",
  },
];
